package com.example.whereto;

import com.google.android.gms.maps.CameraUpdate;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.MapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;
import com.models.PlaceDetailModel;
import com.models.Placeresponse;

import android.net.Uri;
import android.opengl.Visibility;
import android.os.AsyncTask;
import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.content.res.ColorStateList;
import android.graphics.Color;
import android.util.Log;
import android.view.ContextThemeWrapper;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import com.utils.*;

public class PlacesDetails extends Activity {
	// Google Map
	Placeresponse placedetail;
	private GoogleMap googleMap;
	LatLng lat;

	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_places_details);
		OnClickListener listner = new OnClickListener() {

			@Override
			public void onClick(View v) {
				String tag = (String) v.getTag();
				if (tag.equals("direction")) {
					// launch map application
					Uri uri = Uri.parse("geo:" + lat.latitude + ","
							+ lat.longitude);

					Intent intent = new Intent(Intent.ACTION_VIEW, uri);

					startActivity(intent);
				}

			}
		};
		Intent intent = getIntent();
		Bundle extra = intent.getExtras();
		placedetail = (Placeresponse) extra.getSerializable("nearbyobj");
		try {
			new AsyncTask<String, Void, PlaceDetailModel>() {

				@Override
				protected PlaceDetailModel doInBackground(String... params) {

					GooglePlaces places = new GooglePlaces();
					PlaceDetailModel model = places.GetPlacesDetails(params[0]);
					return model;

				}

				@Override
				protected void onPostExecute(final PlaceDetailModel result) {
					runOnUiThread(new Runnable() {

						@Override
						public void run() {
                           
						    if(result == null)
						    	return;

							TextView lbl = (TextView) findViewById(R.id.lblContact);
							TextView lb2 = (TextView) findViewById(R.id.lblContact1);
							TextView lb3 = (TextView) findViewById(R.id.lblContact2);

							if (result.getPhone_number() !=null && !result.getPhone_number().equals(""))
								lbl.setText(result.getPhone_number());
							else
								lbl.setVisibility(2);

							if (result.getWebsite()!=null &&   !result.getWebsite().equals(""))
								lb2.setText(result.getWebsite());
							else
								lb2.setVisibility(2);

							if (result.getGoogleUrl()!=null && !result.getGoogleUrl().equals(""))
								lb3.setText(result.getGoogleUrl());
							else
								lb3.setVisibility(2);
						//	Log.e("Name of Selected------>", result.getName());
						}
					});
				}
			}.execute(placedetail.getReferences());
		} catch (Exception e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

		ImageView imgView = (ImageView) findViewById(R.id.imgDirection);
		imgView.setOnClickListener(listner);

		try {
			// Loading map
			initilizeMap();

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.activity_places_details, menu);
		return true;
	}

	/**
	 * function to load map. If map is not created it will create it for you
	 * */
	private void initilizeMap() {
		if (googleMap == null) {

			googleMap = ((MapFragment) getFragmentManager().findFragmentById(
					R.id.mapview)).getMap();

			// add pin to map
			// latitude and longitude
			double latitude = placedetail.getLatitude();
			double longitude = placedetail.getLongitude();

			// create marker
			MarkerOptions marker = new MarkerOptions().position(
					new LatLng(latitude, longitude)).title("Hello Maps ");

			// adding marker
			googleMap.addMarker(marker);
			googleMap.setMyLocationEnabled(false);

			lat = new LatLng(latitude, longitude);
			googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(lat, 15));
			// check if map is created successfully or not
			if (googleMap == null) {
				Toast.makeText(getApplicationContext(),
						"Sorry! unable to create maps", Toast.LENGTH_SHORT)
						.show();
			}
		}
	}

}
